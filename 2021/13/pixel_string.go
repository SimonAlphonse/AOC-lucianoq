package main

import "github.com/lucianoq/container/set"

func toString(grid set.Set[C], width, height, letterWidth, spaces int) string {
	str := ""
	for offset := 0; offset < width; offset += letterWidth + spaces {
		var sum uint32
		for i := 0; i < height; i++ {
			for j := 0; j < letterWidth; j++ {
				if grid.Contains(C{j + offset, i}) {
					sum |= 1 << (letterWidth*i + j)
				}
			}
		}
		str += dict[sum]
	}
	return str
}

var dict = map[uint32]string{
	//  ██
	// █  █
	// █  █
	// ████
	// █  █
	// █  █
	0b01001_01001_01111_01001_01001_00110: "A",

	// ███
	// █  █
	// ███
	// █  █
	// █  █
	// ███
	0b00111_01001_01001_00111_01001_00111: "B",

	//  ██
	// █  █
	// █
	// █
	// █  █
	//  ██
	0b00110_01001_00001_00001_01001_00110: "C",

	// ████
	// █
	// ███
	// █
	// █
	// ████
	0b01111_00001_00001_00111_00001_01111: "E",

	// █  █
	// █  █
	// ████
	// █  █
	// █  █
	// █  █
	0b01001_01001_01001_01111_01001_01001: "H",

	//   ██
	//    █
	//    █
	//    █
	// █  █
	//  ██
	0b00110_01001_01000_01000_01000_01100: "J",

	// █  █
	// █ █
	// ██
	// █ █
	// █ █
	// █  █
	0b01001_00101_00101_00011_00101_01001: "K",

	// █
	// █
	// █
	// █
	// █
	// ████
	0b01111_00001_00001_00001_00001_00001: "L",

	// ███
	// █  █
	// █  █
	// ███
	// █
	// █
	0b00001_00001_00111_01001_01001_00111: "P",

	// ███
	// █  █
	// █  █
	// ███
	// █ █
	// █  █
	0b01001_00101_00111_01001_01001_00111: "R",

	// █   █
	// █   █
	//  █ █
	//   █
	//   █
	//   █
	0b00100_00100_00100_01010_10001_10001: "Y",

	// ████
	//    █
	//   █
	//  █
	// █
	// ████
	0b01111_00001_00010_00100_01000_01111: "Z",
}
